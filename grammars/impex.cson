'scopeName': 'source.impex'
'name': 'Impex'
'fileTypes': ['impex']
'patterns': [
  {
<<<<<<< HEAD
    #Comment definition
    'include': '#comment'
  }
  {
    #Boolean definitions
    'match': '(true|false)'
    'name': 'boolean.impex'
  }
  {
    #Punctuation definitions
    'match': '(;|,|"|=|\\(|\\)|\\[|\\]|\\:)'
    'name': 'punctuation.impex'
  }
  {
    #Command definitions
    'match': 'INSERT_UPDATE|UPDATE'
    'name': 'command.impex'
  }
  {
    #Definition of macro starts with $
    'match': '((\\$).[0-9A-Za-zğüşöçİĞÜŞÖÇ_=&]+)'
    'name': 'macro.impex'
  }
  {
    #Definition after ( Definition method
    'match': '(?<=\\()[^\\)|^\\=|^\\(|^\\[|^\\]|^\\{|^\\}|^\\$]+'
    'name': 'curly-brackets-inside.impex'
  }
  {
    #Definition after =
    'match': '(?<=\\=)[^\\)|^\\=|^\\(|^\\[|^\\]|^\\{|^\\}|^\\$]+'
    'name': 'square-brackets-inside.impex'
  }
  {
    #Definition after :
    'match': '(?<=\\:)[^\\)|^\\=|^\\(|^\\[|^\\]|^\\{|^\\}|^\\$]+'
    'name': 'square-brackets-inside.impex'
  }
  {
    #Definition @
    'match': '(\\@)'
    'name': 'import.impex'
  }
  {
    #Definition after @
    'match': '(?<=\\@)[^\\)|^\\=|^\\(|^\\[|^\\]|^\\{|^\\}|^\\$]+'
    'name': 'import.impex'
  }
  {
    #Method after , and before [
    'match': '(?<=\\,).*?(?=\\[)'
    'name': 'curly-brackets-inside.impex'
  }
  {
    #Argument after [ and before =
    'match': '(?<=\\[).*?(?=\\=)'
    'name': 'import.argument'
  }
=======
    'include': '#comment'
  }
  {
    'match': '\\b(?i:(0x\\h*))'
    'name': 'constant.numeric.integer.hexadecimal.python'
  }
  {
    'match': '(true|false)'
    'name': 'constant.language.boolean.impex'
  }
  {
    'match': '(;|,|"|=)'
    'name': 'constant.language.mypunctuation.impex'
  }
  {
    'match': 'INSERT_UPDATE'
    'name': 'constant.language.command.impex'
  }
  {
    'match': '([0-9A-Za-zğüşöçİĞÜŞÖÇ_&]+)'
    'name': 'constant.language.text.impex'
  }
  {
    'match': '((\\$).[0-9A-Za-zğüşöçİĞÜŞÖÇ_&,]+)'
    'name': 'constant.language.macro.impex'
  }
  {
    'match': '\\((.*?)\\)'
    'name': 'constant.language.curly.brackets.impex'
  }
  {
    'match': '\\[(.*?)\\]'
    'name': 'constant.language.square.brackets.impex'
  }

>>>>>>> origin/master
]
'repository':
  'comment':
    'captures':
      '1':
        'name': 'comment.line.number-sign.generic-config'
      '2':
        'name': 'punctuation.definition.comment.generic-config'
      '3':
        'name': 'punctuation.definition.comment.generic-config'
    'match': '((#).*$\\n?)'
